// <auto-generated />
using System;
using Inabox.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Inabox.Migrations
{
    [DbContext(typeof(InaboxContext))]
    partial class InaboxContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Inabox.Models.Server", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Hostname");

                    b.Property<string>("Name");

                    b.Property<int>("Port");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("Inabox.Models.ServerHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("ServerId");

                    b.HasKey("Id");

                    b.HasIndex("ServerId");

                    b.ToTable("ServerHistories");
                });

            modelBuilder.Entity("Inabox.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Inabox.Models.Server", b =>
                {
                    b.HasOne("Inabox.Models.User")
                        .WithMany("Servers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Inabox.Models.ServerHistory", b =>
                {
                    b.HasOne("Inabox.Models.Server")
                        .WithMany("History")
                        .HasForeignKey("ServerId");
                });
#pragma warning restore 612, 618
        }
    }
}
